---
name: Plan Terraform code on PR

on:
  pull_request:
    paths:
      - "**/*.tf"
      - "terraform/**/*.hcl"
      - ".github/workflows/terraform-apply.yml"
      - ".github/workflows/terraform-plan.yml"
  workflow_dispatch:

env:
  TF_IN_AUTOMATION: true

jobs:
  plan:
    name: Plan
    runs-on: ubuntu-latest

    permissions:
      pull-requests: write
      id-token: write
      contents: read

    steps:
      - name: Checkout code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Setup Taskfile
        uses: arduino/setup-task@b91d5d2c96a56797b48ac1e0e89220bf64044611 # v2.0.0

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@651471c36a6092792c552e8b1bef71e592b462d8 # v3.1.1

      - name: configure aws credentials
        uses: aws-actions/configure-aws-credentials@4fc4975a852c8cd99761e2de1f4ba73402e44dd9 # v4.0.3
        with:
          role-to-assume: arn:aws:iam::524080394605:role/TFGithubOIDC
          aws-region: eu-north-1

      - name: Terraform Init
        run: task terraform:cloudflare:init

      - name: Terraform Validate
        run: task terraform:cloudflare:validate

      - name: Terraform Format
        run: task terraform:cloudflare:format-check

      - name: Terraform Plan
        id: plan
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.TF_VAR_CLOUDFLARE_API_TOKEN }}
          TF_VAR_protonmail_verification: ${{ secrets.TF_VAR_PROTONMAIL_VERIFICATION }}
        run: task terraform:cloudflare:plan

      - name: Update PR
        uses: actions/github-script@3908079ba1e7bce10117ad701c321d07e89017a9 # v7
        id: plan-comment
        env:
          PLAN: "terraform\n${{ steps.plan.outputs.stdout }}"
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const output = `#### Terraform Initialization ‚öôÔ∏è\`${{ steps.init.outcome }}\`
            #### Terraform Plan üìñ\`${{ steps.plan.outcome }}\`

            Show Plan

            \`\`\`${process.env.PLAN}\`\`\`

            *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`, Workflow: \`${{ github.workflow }}\`*`;

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })
